Tokens:
PROGRAM : Program
IDENTIFIER : Program1
 : (
IDENTIFIER : output
 : )
 : ;
VAR : var
IDENTIFIER : notCount
 : :
IDENTIFIER : integer
 : ;
BEGIN : begin
IDENTIFIER : notCount
 : :=
INTEGER : 5
 : *
 : (
INTEGER : 10
 : +
REAL : 3.0
 : )
 : ;
END : end
 : .
EOF : <EOF>

Parse tree (Lisp format):
(program (programHeader Program (programIdentifier Program1) (programParameters ( output )) ;) (block (declarations (variablesPart var (variableDeclarationsList (variableDeclarations (variableIdentifierList (variableIdentifier notCount)) : (typeSpecification (simpleType (typeIdentifier integer)))))) ;) (compoundStatement begin (statementList (statement (assignmentStatement (lhs (variable (variableIdentifier notCount))) := (rhs (expression (simpleExpression (term (factor (number (unsignedNumber (integerConstant 5)))) (mulOp *) (factor ( (expression (simpleExpression (term (factor (number (unsignedNumber (integerConstant 10))))) (addOp +) (term (factor (number (unsignedNumber (realConstant 3.0))))))) )))))))) ; (statement emptyStatement)) end)) .)
